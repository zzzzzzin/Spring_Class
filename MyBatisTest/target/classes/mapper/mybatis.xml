<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis">
	<!-- 세미콜론 작성하지 않게 주의 -->
	<insert id="m1">
		insert into tblAddress values (seqAddress.nextVal, '홍길동', 20, '서울시', 'm')
	</insert>
	
	<delete id="m2" parameterType="java.lang.String">
		delete from tblAddress where seq = #{seq}
	</delete>
	
	
	<!-- 해시맵의 키값만 적어도 get메서드 사용하는 코드 작성해줌 -->
	<insert id="m3" parameterType="java.util.HashMap">
	<!-- MyBais Alias => <insert id="m3" parameterType="map"> -->
		insert into tblAddress 
			values (seqAddress.nextVal, #{name}, #{age}, #{address}, #{gender})
	</insert>

	<insert id="add" parameterType="com.test.mybatis.dto.MyBatisDTO">
		insert into tblAddress 
			values (seqAddress.nextVal, #{name}, #{age}, #{address}, #{gender})
	</insert>
	
	<select id="m4" resultType="Integer">
		select count(*) from tblAddress
	</select>

	<select id="m5" parameterType="String" resultType="com.test.mybatis.dto.MyBatisDTO">
		select * from tblAddress where seq = #{seq} 
	</select>

	<!-- resultType: 결과셋의 타입(X), 결과셋의 레코드의 타입(O) -->
	<!-- name의 자료형이 String이라 resulType은 String 이고 template.selectList에서 List로 변환해줌 -->
	<select id="m6" resultType="String"> 
		select name from tblAddress 
	</select>

	<select id="m7" resultType="com.test.mybatis.dto.MyBatisDTO"> 
		select * from tblAddress 
	</select>
	
	<!-- ERROR: jdbc.sqlonly - 1. PreparedStatement.execute() select count(*) from 'tblAddress'  -->
	<!--<select id="m8" resultType="Integer" parameterType="String">
		select count(*) from #{table}
	</select> -->
	<select id="m8" resultType="Integer" parameterType="String">
		select count(*) from ${table}
		<!-- where ${colum} = #{value} -->
	</select>
	
	<!-- XML 오류 > sax => Caused by: org.xml.sax.SAXParseException; -->
	<!-- 	
		<select id="m9" resultType="com.test.mybatis.dto.MyBatisDTO"> 
			select * from tblAddress
				where age < 25 
		</select>
	 -->	
 	<select id="m9" resultType="com.test.mybatis.dto.MyBatisDTO"> 
		select * from tblAddress
		<![CDATA[
			where age <= 25
		]]> 
		<!-- where age &lt;= 25 -->
	</select>
	
	<select id="m10" parameterType="String" resultType="com.test.mybatis.dto.MyBatisDTO">
		<!-- java.sql.SQLException: 부적합한 열 인덱스 => preparedStatement에서 ? 자리를 못 찾음 -->
		select * from tblAddress 
			where address like '%' || #{search} || '%'
			
			
			<!-- 위와 결과는 동일한 쿼리이지만, 보안에 취약 -->
			<!-- where address like '%${search}%' -->
			
			<!-- 
				
				like '%${search}%'는 해킹에 취약	
				
				search > "서울"
				where address like '%서울%'

				search > "%' or 1=1 or ''='%"
				where address like '%%' or 1=1 or ''='%%'				
			
			-->
			
			
	</select>
	
	<select id="m11" resultType="dto" parameterType="String">
		<!-- 
		select
			*
		from tblAddress
			where gender = #{gender}
			order by seq asc 
		-->
		
		<if test="gender == 'm'.toString()">
		select
			*
		from tblAddress
			where gender = 'm'
				order by seq asc
		</if>

		<if test='gender == "f"'>
		select
			*
		from tblAddress
			where gender = 'f'
				order by seq asc				
		</if>
		<if test='gender == null'>
		select
			*
		from tblAddress
				order by seq asc				
		</if>
		
	</select>
	
	<select id="m12" resultType="dto" parameterType="String">
		<!-- 
		select
			*
		from tblAddress
			<if test="gender != null">
			where gender = #{gender}
			</if>
				order by seq asc 
		-->				
		
		select
			*
		from tblAddress
			where age >= 3
			<if test="gender != null">
			and gender = #{gender}
			</if>
				order by seq asc				
		
	</select>
	
	<select id="m13" resultType="dto" parameterType="dto">
	
		<!-- 
		<if test="gender == null and address == null">
		select * from tblAddress
		</if>
		
		<if test="gender != null and address == null">
		select * from tblAddress
			where gender = #{gender}
		</if>
		
		<if test="gender == null and address != null">
		select * from tblAddress
			where address like '%' || #{address} || '%'	
		</if>
		
		<if test="gender != null and address != null">
		select * from tblAddress
			where gender = #{gender} and address like '%' || #{address} || '%'	
		</if> 
		-->
		
		<!--
			java.sql.SQLSyntaxErrorException: ORA-00936: 누락된 표현식
			 select * from tblAddress where and address like '%' || ? || '%'	 
		-->
		<!-- 
		select * from tblAddress
			where
			 	<if test="gender != null">
				gender = #{gender} 
				</if>
				
				<if test="address != null">
				and address like '%' || #{address} || '%'
				</if>	
		-->		
		
		select * from tblAddress
			where
				1 = 1
			
			 	<if test="gender != null">
				and gender = #{gender} 
				</if>
				
				<if test="address != null">
				and address like '%' || #{address} || '%'
				</if>	
		
	</select>
	
	<select id="m14" resultType="dto" parameterType="Integer">
		select
			<if test="type == 1">
			name, age
			</if>
			<if test="type == 2">
			name, gender, address
			</if>
			<if test="type == null">
			*
			</if>
		from tblAddress
	
	</select>
	
	<select id="m15" resultType="dto" parameterType="map">
	
		<!-- 
		select * from tblAddress
			where ${column} = #{word} 
		-->
		
		<!-- 
		select * from tblAddress
			<choose>
				<when test="column == 'age'">
				where age >= #{word}
				</when>
				<when test="column == 'address'">
				where address like '%' || #{word} || '%'
				</when>
				<otherwise>
				where ${column} = #{word}
				</otherwise>
			</choose> 
		-->
		
		select * from tblAddress
			<where>
				<if test="column == 'age'">
				age >= #{word}
				</if>
				<if test="column == 'address'">
				address like '%' || #{word} || '%'
				</if>
				<if test="column != null and column != 'age' and column != 'address'">
				${column} = #{word}
				</if>
			</where>	
	</select>
	
	<select id="m16" parameterType="dto">
	
		select * from tblAddress
			<where>
				<if test="age != null">
					and age >= #{age} <!-- where 절이 and/or 를 문맥에 따라 자동으로 삭제해줌 -->
				</if>
				<if test="gender != null">
					and gender = #{gender}
				</if>
				
			</where>
	
	</select>
	
	<update id="m17" parameterType="dto">
			
		update tblAddress
			<set>
				<if test="name != null">name = #{name},</if>
				<if test="age != null">age = #{age},</if>
				<if test="address != null">address = #{address},</if>
				<if test="gender != null">gender = #{gender}</if>
			</set>
				where seq = #{seq}
	
	</update>
	
	<select id="m18" resultType="dto">
		<!-- [강아지, 고양이, 타조] -->
		
		<!-- 
		select * from tblAddress
			where name = '강아지' or name = '고양이' or name = '타조' 
		-->
		
		<!-- 
		select * from tblAddress
			where name in ('강아지', '고양이', '타조') 
		-->
		
		<!-- 
		select * from tblAddress
			<where>
				<foreach collection="name" item="item" index="index">
					#{item}
				</foreach>
			</where>  
		-->
				
		select * from tblAddress
			<where>
				<foreach collection="list" item="item" open="name in (" close=")" separator=",">
					#{item}
				</foreach>
			</where> 
		
	</select>
	
	
	
	
</mapper>









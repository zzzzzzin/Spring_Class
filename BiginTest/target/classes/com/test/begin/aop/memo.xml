<?xml version="1.0" encoding="UTF-8"?>
<!-- 스프링 설정 파일 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- Spring AOP 1. 주업무 객체 > 빈으로 등록 2. 보조업무 객체 > 빈으로 등록 -->
	<!-- 주업무 객체 -->
	<bean id="memo" class="com.test.begin.aop.MemoImpl"></bean>

	<!-- 보조업무 객체 -->
	<bean id="logger" class="com.test.begin.aop.Logger"></bean>

	<!-- 주업무 객체 + 보조업무 객체 => AOP 설정 -->
	<aop:config><!-- AOP 설정 태그 -->

		<!-- 보조업무 객체를 지정한다. 역할 부여 -->
		<aop:aspect ref="logger" id="loggerAdvice">

			<!-- 1. 주업무 객체를 지정 2. 주업무 객체의 매서드도 지정 1 + 2 = Pointcut => 보조 업무를 결합시킬 
				대상 = 주업무 객체.특정 메서드(); expression="AspectJ 표현식" - execution() 지시자 - execution(특정 
				클래스 + 특정 메서드) - execution([접근 지정자] 반환형 [패키지.클래스].메서드(인자)) - execution(public 
				void com.test.begin.aop.MemoImpl.add(String)) -->

			<aop:pointcut expression="execution(public void com.test.begin.aop.MemoImpl.add(String))" id="p1"/>
			
			<aop:pointcut expression="execution(public String com.test.begin.aop.MemoImpl.read(int))" id="p2"/>
			
			<aop:pointcut expression="execution(public String com.test.begin.aop.MemoImpl.read(int)) || execution(public void com.test.begin.aop.MemoImpl.add(String))" id="p3"/>
			
			<aop:pointcut expression="execution(public * com.test.begin.aop.MemoImpl.*(..))" id="p4"/>
			
			<aop:pointcut expression="execution(* *(..))" id="p5"/>
			
			<aop:pointcut expression="execution(* add(String))" id="p6"/>
			
			<aop:pointcut expression="execution(* add*(String))" id="p7"/>

			<!-- 보조업무 객체.메서드 + Pointcut > 위빙(Weaving) > Advice - 주업무 실행 > 보조 업무 실행 
				(ex.로그 생성) - 보조 업무 실행 > 주업무 실행 (ex.권한 확인) -->

			<!-- 보조업무에서 사용할 메서드 선택 (method에 사용할 메서드명 작성, pointcut-ref에는 주업무 id) -->
			<!-- <aop:after method="after" pointcut-ref="p1" /> -->
			<!-- <aop:after method="after" pointcut-ref="p2" /> -->
			<!-- <aop:after method="after" pointcut-ref="p3" /> -->
			<!-- <aop:after method="after" pointcut-ref="p4" /> -->
			<!-- <aop:after method="after" pointcut-ref="p5" /> -->
			<!-- <aop:after method="after" pointcut-ref="p7" /> -->
			
			<!-- <aop:before method="after" pointcut-ref="p1"/> -->
			
			<!-- <aop:after method="after" pointcut-ref="p1"/>
			<aop:before method="after" pointcut-ref="p1" /> -->
			
			<aop:around method="around" pointcut-ref="p1" />
			<aop:after-returning method="history" pointcut-ref="p2" returning="memo" />
			<aop:after-throwing method="check" pointcut-ref="p2" throwing="e" />

		</aop:aspect>

	</aop:config>



</beans>